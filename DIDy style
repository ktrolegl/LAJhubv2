-- Direct Button Implementation for Didy Main
print("[LAJ HUB] Loading Diddy Style with direct button implementation...")

-- Compatibility wrapper for different executors
local executor_functions = {
    http_request = (syn and syn.request) or (http and http.request) or (request) or (httpRequest),
    getgenv = getgenv or function() return _G end,
    is_synapse = (syn and true) or false,
    is_scriptware = (identifyexecutor and identifyexecutor():find("ScriptWare")) and true or false,
    is_krnl = (KRNL_LOADED and true) or false,
    mouse1click = mouse1click or mouse1press or nil,
    is_fluxus = (fluxus and true) or false,
    is_electron = (Electron and true) or false
}

-- Detect executor
local executor_name = "Unknown"
if executor_functions.is_synapse then
    executor_name = "Synapse X"
elseif executor_functions.is_scriptware then
    executor_name = "Script-Ware"
elseif executor_functions.is_krnl then
    executor_name = "KRNL"
elseif executor_functions.is_fluxus then
    executor_name = "Fluxus"
elseif executor_functions.is_electron then
    executor_name = "Electron"
else
    if identifyexecutor then
        executor_name = identifyexecutor()
    end
end

print("[LAJ HUB] Detected executor: " .. executor_name)

-- Ensure game object is available
if not game then
    game = {
        GetService = function(_, name)
            if name == "Players" then
                return {
                    LocalPlayer = {
                        Character = {},
                        PlayerGui = {
                            InGame = {
                                Parent = workspace
                            }
                        },
                        FindFirstChild = function() return nil end
                    }
                }
            elseif name == "ReplicatedStorage" then
                return {
                    FindFirstChild = function() return nil end,
                    GetChildren = function() return {} end,
                    Shared = {
                        Tables = {
                            Styles = {}
                        }
                    },
                    Controllers = {
                        AbilityController = {
                            Abilities = {}
                        }
                    },
                    Packages = {
                        Knit = {}
                    }
                }
            elseif name == "TweenService" then
                return {
                    Create = function() 
                        return {
                            Play = function() end,
                            Completed = {
                                Connect = function() end
                            }
                        }
                    end
                }
            elseif name == "Debris" then
                return {
                    AddItem = function() end
                }
            elseif name == "RunService" then
                return {
                    Heartbeat = {
                        Wait = function() wait(0.03) end
                    }
                }
            elseif name == "UserInputService" then
                return {
                    InputBegan = {
                        Connect = function() end
                    }
                }
            end
            return {}
        end
    }
    
    -- Create workspace if it doesn't exist
    if not workspace then
        workspace = {
            FindFirstChild = function() return nil end,
            GetChildren = function() return {} end
        }
    end
    
    print("[LAJ HUB] Created mock game environment for executor compatibility")
end

-- Get necessary services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Get the local player
local player = Players.LocalPlayer

-- Safe function to find child objects
local function safeFindFirstChild(parent, childName)
    if not parent then return nil end
    
    local success, result = pcall(function()
        return parent:FindFirstChild(childName)
    end)
    
    if success then
        return result
    end
    
    return nil
end

-- Safe module loading with fallbacks
local function safeRequire(module)
    if not module then return {} end
    
    local success, result = pcall(function()
        -- Try to directly require
        return require(module)
    end)
    
    if success then
        return result
    end
    
    print("[LAJ HUB] Module require failed for: " .. tostring(module) .. ", creating mock")
    
    -- Mock Module structure based on module path
    local moduleName = tostring(module)
    
    if moduleName:match("Styles") then
        return {}
    elseif moduleName:match("AbilityController") or moduleName:match("Abilities") then
        return {}
    elseif moduleName:match("Knit") then
        return {
            Services = {
                BallService = {
                    RE = {
                        Steal = {
                            FireServer = function() 
                                print("[LAJ HUB] Mocked BallService.Steal call") 
                            end
                        }
                    }
                }
            }
        }
    end
    
    -- Default empty table
    return {}
end

-- Set the player's style to "Diddy"
local function setPlayerStyle()
    if not player then return end
    
    -- Check if the Style value already exists
    local styleValue = safeFindFirstChild(player, "Style")
    if not styleValue then
        -- Create a new StringValue for Style
        local success, result = pcall(function()
            local newValue = Instance.new("StringValue")
            newValue.Name = "Style"
            newValue.Parent = player
            return newValue
        end)
        
        if success then
            styleValue = result
        else
            print("[LAJ HUB] Failed to create Style value, using mock")
            styleValue = {Value = "Diddy"}
        end
    end

    -- Set the Style value to "Diddy"
    if styleValue then
        styleValue.Value = "Diddy"
    end
end

-- Load styles
local styles = {}
local function loadStyles()
    -- Try to locate the Styles module
    local StylesModule = safeFindFirstChild(ReplicatedStorage, "Shared") 
        and safeFindFirstChild(ReplicatedStorage.Shared, "Tables") 
        and safeFindFirstChild(ReplicatedStorage.Shared.Tables, "Styles")

    if StylesModule then
        local success, result = pcall(function() return safeRequire(StylesModule) end)
        if success then styles = result end
    end

    -- Set up Diddy style
    styles["Diddy"] = {
        ["Name"] = "Diddy",
        ["Desc"] = "A slippery court maestro, Diddy uses oil-based techniques to outmaneuver opponents and dominate the game.",
        ["Rarity"] = "Mythic"
    }
end

-- Helper function to check if ultimate is active
local function isUltimateActive()
    local ultimateStatus = safeFindFirstChild(player, "UltimateActive")
    if ultimateStatus and ultimateStatus.Value then
        return true
    end
    
    -- Alternative check methods in case the above doesn't work
    local ultimateGui = player.PlayerGui and safeFindFirstChild(player.PlayerGui, "UltimateGui")
    if ultimateGui and ultimateGui.Enabled then
        return true
    end
    
    -- Check for ultimate effects on character
    local character = player.Character
    if character then
        local ultimateEffect = safeFindFirstChild(character, "UltimateEffect")
        if ultimateEffect then
            return true
        end
    end
    
    -- Check for ultimate meter value
    local ingameGui = player.PlayerGui and safeFindFirstChild(player.PlayerGui, "InGame")
    if ingameGui then
        local ultimateMeter = safeFindFirstChild(ingameGui, "Ultimate")
        if ultimateMeter and safeFindFirstChild(ultimateMeter, "Fill") then
            if ultimateMeter.Fill.Size.X.Scale >= 0.99 then
                return true
            end
        end
    end
    
    -- Default return false if no ultimate indicators found
    return false
end

-- Helper function to create water/oil particles
local function createWaterVFX(parent, duration, size, color)
    local Debris = game:GetService("Debris")
    
    if not parent then
        print("[LAJ HUB] createWaterVFX: Parent is nil, cannot create effects")
        return nil, nil
    end
    
    local success, waterParticle, puddle = pcall(function()
        -- Create water particle emitter
        local waterParticle = Instance.new("ParticleEmitter")
        waterParticle.Texture = "rbxassetid://2882437425" -- Water splash texture
        waterParticle.Color = ColorSequence.new(color or Color3.fromRGB(41, 128, 255))
        waterParticle.Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, size * 0.5),
            NumberSequenceKeypoint.new(0.5, size),
            NumberSequenceKeypoint.new(1, size * 0.2)
        })
        waterParticle.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0.1),
            NumberSequenceKeypoint.new(0.7, 0.4),
            NumberSequenceKeypoint.new(1, 1)
        })
        waterParticle.Lifetime = NumberRange.new(0.5, 1)
        waterParticle.Speed = NumberRange.new(3, 6)
        waterParticle.SpreadAngle = Vector2.new(25, 25)
        waterParticle.Rate = 50
        waterParticle.EmissionDirection = Enum.NormalId.Bottom
        waterParticle.Parent = parent
        
        -- Create a puddle effect if needed
        local puddle = Instance.new("Part")
        puddle.Size = Vector3.new(2.5, 0.05, 2.5)
        puddle.Anchored = true
        puddle.CanCollide = false
        puddle.Transparency = 0.3
        puddle.Material = Enum.Material.SmoothPlastic
        puddle.Color = color or Color3.fromRGB(41, 128, 255)
        puddle.CFrame = parent.CFrame * CFrame.new(0, -3, 0)
        puddle.Parent = workspace
        
        -- Apply a growing/fading tween to the puddle
        TweenService:Create(
            puddle,
            TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = Vector3.new(5, 0.05, 5), Transparency = 0.5}
        ):Play()
        
        -- Emit particles for a short time
        waterParticle:Emit(20)
        
        -- Clean up after specified duration
        task.delay(0.2, function()
            if waterParticle and waterParticle.Parent then
                waterParticle.Enabled = false
            end
        end)
        
        Debris:AddItem(waterParticle, 1.5)
        Debris:AddItem(puddle, duration or 3)
        
        return waterParticle, puddle
    end)
    
    if not success then
        print("[LAJ HUB] createWaterVFX error:", waterParticle)
        return nil, nil
    end
    
    return waterParticle, puddle
end

-- Helper function to teleport player with effects
local function teleportWithEffects(player, distance)
    if not player or not player.Character then
        print("[LAJ HUB] teleportWithEffects: Player or Character is nil")
        return nil
    end
    
    local character = player.Character
    local rootPart = safeFindFirstChild(character, "HumanoidRootPart")
    if not rootPart then
        print("[LAJ HUB] teleportWithEffects: HumanoidRootPart not found")
        return nil
    end
    
    local success, result = pcall(function()
        -- Store original position for effect creation
        local originalPos = rootPart.Position
        local originalCF = rootPart.CFrame
        local look = originalCF.LookVector
        
        -- Create effect at original position
        createWaterVFX(rootPart, 2, 2.5, Color3.fromRGB(41, 50, 71))
        
        -- Teleport instantly
        rootPart.CFrame = originalCF + look * distance
        
        -- Create a part at the original position for the final effect
        local originPart = Instance.new("Part")
        originPart.Anchored = true
        originPart.CanCollide = false
        originPart.Transparency = 1
        originPart.Size = Vector3.new(1, 1, 1)
        originPart.Position = originalPos
        originPart.Parent = workspace
        
        -- Create effect at teleport destination
        createWaterVFX(rootPart, 3, 3, Color3.fromRGB(41, 50, 71))
        
        -- Create connecting effect between positions
        local distancePart = Instance.new("Part")
        distancePart.Size = Vector3.new(0.5, 0.5, distance)
        distancePart.Anchored = true
        distancePart.CanCollide = false
        distancePart.Transparency = 0.8
        distancePart.Material = Enum.Material.Neon
        distancePart.Color = Color3.fromRGB(41, 50, 71)
        distancePart.CFrame = CFrame.new(originalPos + (look * distance/2), originalPos + look * distance)
        distancePart.Parent = workspace
        
        -- Add decay effect to the connecting beam
        local Debris = game:GetService("Debris")
        
        TweenService:Create(
            distancePart, 
            TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Transparency = 1, Size = Vector3.new(0.1, 0.1, distance)}
        ):Play()
        
        -- Clean up
        Debris:AddItem(distancePart, 0.6)
        Debris:AddItem(originPart, 0.6)
        
        return rootPart.CFrame
    end)
    
    if not success then
        print("[LAJ HUB] teleportWithEffects error:", result)
        return nil
    end
    
    return result
end

-- Define ability functions
local abilities = {
    OilDribble = {
        Execute = function()
            print("[LAJ HUB] Executing Oil Dribble ability")
            
            local character = player and player.Character
            if not character then 
                warn("Character not found")
                return 
            end
            
            local rootPart = safeFindFirstChild(character, "HumanoidRootPart")
            if not rootPart then 
                warn("HumanoidRootPart not found")
                return 
            end
            
            -- Create a trail of oil/water behind the player
            local waterTrail = Instance.new("Trail")
            waterTrail.Color = ColorSequence.new(Color3.fromRGB(41, 50, 71)) -- Darker oil color
            waterTrail.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0.2),
                NumberSequenceKeypoint.new(1, 0.8)
            })
            waterTrail.Lifetime = 1.5
            waterTrail.MinLength = 0.1
            waterTrail.WidthScale = NumberSequence.new(2.5)
            
            local attachment0 = Instance.new("Attachment")
            attachment0.Position = Vector3.new(0, -2.9, 0)
            attachment0.Parent = rootPart
            
            local attachment1 = Instance.new("Attachment")
            attachment1.Position = Vector3.new(0, -2.9, 0.5)
            attachment1.Parent = rootPart
            
            waterTrail.Attachment0 = attachment0
            waterTrail.Attachment1 = attachment1
            waterTrail.Parent = rootPart
            
            local Debris = game:GetService("Debris")
            Debris:AddItem(waterTrail, 5)
            Debris:AddItem(attachment0, 5)
            Debris:AddItem(attachment1, 5)
            
            -- Create initial oil effect
            createWaterVFX(rootPart, 2, 1.5, Color3.fromRGB(41, 50, 71))
            
            -- Enhanced zig-zag pattern with more dynamic movement
            local moves = {
                {right = 10, forward = 2, duration = 0.12},  -- Move right and slightly forward
                {right = -10, forward = 3, duration = 0.12},  -- Move left and forward
                {right = 10, forward = 3, duration = 0.12},   -- Move right and forward
                {right = -10, forward = 2, duration = 0.12},  -- Move left and slightly forward
                {right = 0, forward = 8, duration = 0.15}     -- Final forward movement
            }
            
            -- Perform each move in the zig-zag sequence
            local currentCF = rootPart.CFrame
            
            for i, move in ipairs(moves) do
                task.spawn(function()
                    local originalCF = rootPart.CFrame
                    local right = originalCF.RightVector
                    local look = originalCF.LookVector
                    
                    local targetCF = originalCF + (right * move.right) + (look * move.forward)
                    
                    local tween = TweenService:Create(
                        rootPart,
                        TweenInfo.new(move.duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {CFrame = targetCF}
                    )
                    
                    tween:Play()
                    
                    task.wait(move.duration)
                    
                    -- Create oil splash at each point of the zig-zag
                    createWaterVFX(rootPart, 1, 1, Color3.fromRGB(41, 50, 71))
                end)
                
                task.wait(move.duration * 0.8)  -- Wait a bit less than the full duration
            end
            
            -- Create a final, bigger splash
            task.wait(0.2)
            createWaterVFX(rootPart, 3, 2.5, Color3.fromRGB(41, 50, 71))
            
            print("[LAJ HUB] Oil Dribble ability executed successfully")
        end,
        Cooldown = 8
    },
    
    OilSteal = {
        Execute = function()
            print("[LAJ HUB] Executing Oil Steal ability")
            
            -- Get Knit safely (compatible with Script-Ware/Synapse)
            local Knit
            local success, result = pcall(function()
                return require(ReplicatedStorage.Packages.Knit)
            end)
            
            if success then
                Knit = result
            else
                -- Create a mock Knit if it fails
                Knit = {
                    Services = {
                        BallService = {
                            RE = {
                                Steal = {
                                    FireServer = function()
                                        print("[LAJ HUB] Mocked BallService.Steal call")
                                    end
                                }
                            }
                        }
                    }
                }
            end

            -- Teleport 12 studs forward
            teleportWithEffects(player, 12)
            
            -- Attempt to steal the ball after teleporting
            task.spawn(function()
                task.wait(0.1)  -- Small delay to ensure teleport completes
                pcall(function()
                    Knit.Services.BallService.RE.Steal:FireServer()
                end)
            end)
            
            print("[LAJ HUB] Oil Steal ability executed successfully")
        end,
        Cooldown = 10
    },
    
    SlickShadow = {
        Execute = function()
            print("[LAJ HUB] Executing Slick Shadow ability")
            
            -- Check if ultimate is active
            if not isUltimateActive() then
                print("[LAJ HUB] Ultimate not active, cannot use Slick Shadow")
                -- Show notification
                local success = pcall(function()
                    local notification = Instance.new("TextLabel")
                    notification.Size = UDim2.new(0, 300, 0, 50)
                    notification.Position = UDim2.new(0.5, -150, 0.7, 0)
                    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    notification.BackgroundTransparency = 0.5
                    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
                    notification.Text = "⚠️ Ultimate must be active to use Slick Shadow!"
                    notification.TextSize = 16
                    notification.Font = Enum.Font.GothamBold
                    notification.Parent = player.PlayerGui.InGame
                    
                    -- Add a corner to the notification
                    local corner = Instance.new("UICorner")
                    corner.CornerRadius = UDim.new(0, 8)
                    corner.Parent = notification
                    
                    -- Fade out and remove after 2 seconds
                    TweenService:Create(
                        notification,
                        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 1.5),
                        {BackgroundTransparency = 1, TextTransparency = 1}
                    ):Play()
                    
                    game:GetService("Debris"):AddItem(notification, 2)
                end)
                
                return
            end
            
            local character = player and player.Character
            if not character then 
                warn("Character not found")
                return 
            end
            
            local humanoid = safeFindFirstChild(character, "Humanoid")
            if not humanoid then
                warn("Humanoid not found")
                return
            end
            
            local rootPart = safeFindFirstChild(character, "HumanoidRootPart")
            if not rootPart then 
                warn("HumanoidRootPart not found")
                return 
            end
            
            -- Create initial effect
            createWaterVFX(rootPart, 2, 3, Color3.fromRGB(41, 50, 71))
            
            -- Number of clones to create
            local numClones = 4
            
            -- Create a sound effect
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://4612374909" -- Splash sound
            sound.Volume = 1
            sound.PlaybackSpeed = 0.8
            sound.Parent = rootPart
            sound:Play()
            
            -- Speed boost effect
            local originalSpeed = humanoid.WalkSpeed
            humanoid.WalkSpeed = originalSpeed * 1.3
            
            -- Create a trail effect
            local trail = Instance.new("Trail")
            trail.Color = ColorSequence.new(Color3.fromRGB(41, 50, 71))
            trail.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0.2),
                NumberSequenceKeypoint.new(1, 1)
            })
            trail.Lifetime = 1
            trail.MinLength = 0.1
            trail.WidthScale = NumberSequence.new(2)
            
            local att0 = Instance.new("Attachment")
            att0.Position = Vector3.new(0, -2.9, -0.5)
            att0.Parent = rootPart
            
            local att1 = Instance.new("Attachment")
            att1.Position = Vector3.new(0, -2.9, 0.5)
            att1.Parent = rootPart
            
            trail.Attachment0 = att0
            trail.Attachment1 = att1
            trail.Parent = rootPart
            
            -- Restore original speed after duration
            task.delay(8, function()
                pcall(function()
                    humanoid.WalkSpeed = originalSpeed
                end)
            end)
            
            local Debris = game:GetService("Debris")
            Debris:AddItem(trail, 8)
            Debris:AddItem(att0, 8)
            Debris:AddItem(att1, 8)
            Debris:AddItem(sound, 3)
            
            print("[LAJ HUB] Slick Shadow ability executed successfully")
        end,
        Cooldown = 20
    },
    
    SlickCourtTakeover = {
        Execute = function()
            print("[LAJ HUB] Executing Slick Court Takeover ability")
            
            -- Check if ultimate is active
            if not isUltimateActive() then
                print("[LAJ HUB] Ultimate not active, cannot use Slick Court Takeover")
                -- Show notification
                local success = pcall(function()
                    local notification = Instance.new("TextLabel")
                    notification.Size = UDim2.new(0, 300, 0, 50)
                    notification.Position = UDim2.new(0.5, -150, 0.7, 0)
                    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    notification.BackgroundTransparency = 0.5
                    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
                    notification.Text = "⚠️ Ultimate must be active to use Slick Court Takeover!"
                    notification.TextSize = 16
                    notification.Font = Enum.Font.GothamBold
                    notification.Parent = player.PlayerGui.InGame
                    
                    -- Add a corner to the notification
                    local corner = Instance.new("UICorner")
                    corner.CornerRadius = UDim.new(0, 8)
                    corner.Parent = notification
                    
                    -- Fade out and remove after 2 seconds
                    TweenService:Create(
                        notification,
                        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 1.5),
                        {BackgroundTransparency = 1, TextTransparency = 1}
                    ):Play()
                    
                    game:GetService("Debris"):AddItem(notification, 2)
                end)
                
                return
            end
            
            local character = player and player.Character
            if not character then 
                warn("Character not found")
                return 
            end
            
            local rootPart = safeFindFirstChild(character, "HumanoidRootPart")
            if not rootPart then 
                warn("HumanoidRootPart not found")
                return 
            end
            
            -- Create initial effect
            createWaterVFX(rootPart, 2, 3, Color3.fromRGB(41, 50, 71))
            
            -- Create a sound effect
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://4612374909" -- Splash sound
            sound.Volume = 1
            sound.PlaybackSpeed = 0.8
            sound.Parent = rootPart
            sound:Play()
            
            -- Create the court surface (simplified for this version)
            local Debris = game:GetService("Debris")
            
            -- Create a glow effect on the player
            local glow = Instance.new("ParticleEmitter")
            glow.Texture = "rbxassetid://241629053" -- Glow texture
            glow.Color = ColorSequence.new(Color3.fromRGB(41, 128, 255))
            glow.Size = NumberSequence.new(1)
            glow.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0.5),
                NumberSequenceKeypoint.new(1, 1)
            })
            glow.Lifetime = NumberRange.new(0.5, 1)
            glow.Speed = NumberRange.new(1, 2)
            glow.SpreadAngle = Vector2.new(180, 180)
            glow.Rate = 20
            glow.Parent = rootPart
            
            -- Disable glow after duration
            task.delay(10, function()
                pcall(function()
                    if glow and glow.Parent then
                        glow.Enabled = false
                    end
                end)
            end)
            
            Debris:AddItem(glow, 11)
            Debris:AddItem(sound, 3)
            
            print("[LAJ HUB] Slick Court Takeover ability executed successfully")
        end,
        Cooldown = 30
    },
    
    RefineryRush = {
        Execute = function()
            print("[LAJ HUB] Executing Refinery Rush ability")
            
            -- Check if ultimate is active
            if not isUltimateActive() then
                print("[LAJ HUB] Ultimate not active, cannot use Refinery Rush")
                -- Show notification
                local success = pcall(function()
                    local notification = Instance.new("TextLabel")
                    notification.Size = UDim2.new(0, 300, 0, 50)
                    notification.Position = UDim2.new(0.5, -150, 0.7, 0)
                    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    notification.BackgroundTransparency = 0.5
                    notification.TextColor3 = Color3.fromRGB(255, 255, 255)
                    notification.Text = "⚠️ Ultimate must be active to use Refinery Rush!"
                    notification.TextSize = 16
                    notification.Font = Enum.Font.GothamBold
                    notification.Parent = player.PlayerGui.InGame
                    
                    -- Add a corner to the notification
                    local corner = Instance.new("UICorner")
                    corner.CornerRadius = UDim.new(0, 8)
                    corner.Parent = notification
                    
                    -- Fade out and remove after 2 seconds
                    TweenService:Create(
                        notification,
                        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 1.5),
                        {BackgroundTransparency = 1, TextTransparency = 1}
                    ):Play()
                    
                    game:GetService("Debris"):AddItem(notification, 2)
                end)
                
                return
            end
            
            local character = player and player.Character
            if not character then 
                warn("Character not found")
                return 
            end
            
            local humanoid = safeFindFirstChild(character, "Humanoid")
            if not humanoid then
                warn("Humanoid not found")
                return
            end
            
            local rootPart = safeFindFirstChild(character, "HumanoidRootPart")
            if not rootPart then 
                warn("HumanoidRootPart not found")
                return 
            end
            
            -- Create initial effect
            createWaterVFX(rootPart, 2, 2, Color3.fromRGB(41, 50, 71))
            
            -- Create a sound effect
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://5416548293" -- Whoosh sound
            sound.Volume = 1
            sound.PlaybackSpeed = 1.5
            sound.Parent = rootPart
            sound:Play()
            
            -- Speed boost effect
            local originalSpeed = humanoid.WalkSpeed
            pcall(function()
                humanoid.WalkSpeed = originalSpeed * 2
            end)
            
            -- Create boost particles
            local boost = Instance.new("ParticleEmitter")
            boost.Texture = "rbxassetid://2882437425"
            boost.Color = ColorSequence.new(Color3.fromRGB(41, 50, 71))
            boost.Size = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(1, 0.2)
            })
            boost.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0.1),
                NumberSequenceKeypoint.new(1, 1)
            })
            boost.Lifetime = NumberRange.new(0.5, 1)
            boost.Speed = NumberRange.new(10, 15)
            boost.SpreadAngle = Vector2.new(15, 15)
            boost.Rate = 50
            boost.EmissionDirection = Enum.NormalId.Back
            boost.Parent = rootPart
            
            -- Restore original speed after duration
            task.delay(5, function()
                pcall(function()
                    humanoid.WalkSpeed = originalSpeed
                    if boost and boost.Parent then
                        boost.Enabled = false
                    end
                end)
            end)
            
            local Debris = game:GetService("Debris")
            Debris:AddItem(boost, 6)
            Debris:AddItem(sound, 2)
            
            print("[LAJ HUB] Refinery Rush ability executed successfully")
        end,
        Cooldown = 25
    }
}

-- *** DIRECT BUTTON IMPLEMENTATION ***
-- This creates direct keyboard hotkeys for abilities
-- This is a completely different approach from UI buttons

print("[LAJ HUB] Setting up direct keyboard hotkeys for abilities...")

-- Key mappings
local keyMappings = {
    OilDribble = Enum.KeyCode.Q,       -- Press Q for Oil Dribble
    OilSteal = Enum.KeyCode.E,         -- Press E for Oil Steal
    SlickShadow = Enum.KeyCode.R,      -- Press R for Slick Shadow
    SlickCourtTakeover = Enum.KeyCode.T, -- Press T for Slick Court Takeover
    RefineryRush = Enum.KeyCode.Y      -- Press Y for Refinery Rush
}

-- Cooldown timers
local cooldowns = {
    OilDribble = 0,
    OilSteal = 0,
    SlickShadow = 0,
    SlickCourtTakeover = 0,
    RefineryRush = 0
}

-- Function to check if ability is on cooldown
local function isOnCooldown(ability)
    return cooldowns[ability] > os.time()
end

-- Function to start cooldown
local function startCooldown(ability, duration)
    cooldowns[ability] = os.time() + duration
end

-- Create UI for displaying hotkeys
local function createHotkeyUI()
    local success, hotkeysFrame = pcall(function()
        -- Check if player and PlayerGui exist
        if not player or not player.PlayerGui then
            print("[LAJ HUB] Cannot create hotkey UI: PlayerGui not found")
            return nil
        end
        
        -- Create the main frame
        local hotkeysFrame = Instance.new("Frame")
        hotkeysFrame.Name = "DiddyHotkeys"
        hotkeysFrame.Size = UDim2.new(0, 200, 0, 175)
        hotkeysFrame.Position = UDim2.new(0, 10, 0.4, 0)
        hotkeysFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        hotkeysFrame.BackgroundTransparency = 0.5
        hotkeysFrame.BorderSizePixel = 0
        
        -- Add a title
        local title = Instance.new("TextLabel")
        title.Size = UDim2.new(1, 0, 0, 30)
        title.Position = UDim2.new(0, 0, 0, 0)
        title.Text = "Diddy Style Hotkeys"
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.BackgroundTransparency = 1
        title.Font = Enum.Font.GothamBold
        title.TextSize = a
        title.Parent = hotkeysFrame
        
        -- Add a corner
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = hotkeysFrame
        
        -- Define hotkey details
        local hotkeys = {
            {key = "Q", ability = "Oil Dribble", color = Color3.fromRGB(41, 128, 255)},
            {key = "E", ability = "Oil Steal", color = Color3.fromRGB(41, 128, 255)},
            {key = "R", ability = "Slick Shadow", color = Color3.fromRGB(200, 100, 255)},
            {key = "T", ability = "Court Takeover", color = Color3.fromRGB(200, 100, 255)},
            {key = "Y", ability = "Refinery Rush", color = Color3.fromRGB(200, 100, 255)}
        }
        
        -- Create hotkey labels
        for i, hotkey in ipairs(hotkeys) do
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, -20, 0, 25)
            frame.Position = UDim2.new(0, 10, 0, 30 + (i * 27))
            frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            frame.BackgroundTransparency = 0.3
            frame.BorderSizePixel = 0
            frame.Parent = hotkeysFrame
            
            local keyLabel = Instance.new("TextLabel")
            keyLabel.Size = UDim2.new(0.2, 0, 1, 0)
            keyLabel.Position = UDim2.new(0, 0, 0, 0)
            keyLabel.Text = hotkey.key
            keyLabel.TextColor3 = hotkey.color
            keyLabel.BackgroundTransparency = 1
            keyLabel.Font = Enum.Font.GothamBold
            keyLabel.TextSize = 14
            keyLabel.Parent = frame
            
            local nameLabel = Instance.new("TextLabel")
            nameLabel.Size = UDim2.new(0.8, 0, 1, 0)
            nameLabel.Position = UDim2.new(0.2, 0, 0, 0)
            nameLabel.Text = hotkey.ability
            nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Font = Enum.Font.Gotham
            nameLabel.TextSize = 14
            nameLabel.TextXAlignment = Enum.TextXAlignment.Left
            nameLabel.Parent = frame
            
            local frameCorner = Instance.new("UICorner")
            frameCorner.CornerRadius = UDim.new(0, 6)
            frameCorner.Parent = frame
        }
        
        -- Find or create an ScreenGui to parent the frame to
        local screenGui = player.PlayerGui:FindFirstChild("DiddyStyleGui")
        if not screenGui then
            screenGui = Instance.new("ScreenGui")
            screenGui.Name = "DiddyStyleGui"
            screenGui.Parent = player.PlayerGui
        end
        
        hotkeysFrame.Parent = screenGui
        
        return hotkeysFrame
    end)
    
    if not success then
        print("[LAJ HUB] Error creating hotkey UI:", hotkeysFrame)
        return nil
    end
    
    return hotkeysFrame
end

-- Function to execute an ability
local function executeAbility(abilityName)
    if not abilities[abilityName] then
        warn("[LAJ HUB] Ability not found:", abilityName)
        return
    end
    
    -- Check cooldown
    if isOnCooldown(abilityName) then
        local remainingCooldown = cooldowns[abilityName] - os.time()
        print("[LAJ HUB] " .. abilityName .. " is on cooldown for " .. remainingCooldown .. " seconds")
        return
    end
    
    -- Execute the ability
    print("[LAJ HUB] Executing ability:", abilityName)
    abilities[abilityName].Execute()
    
    -- Start cooldown
    startCooldown(abilityName, abilities[abilityName].Cooldown)
    
    -- Notify user that ability was used
    print("[LAJ HUB] Used " .. abilityName .. ", on cooldown for " .. abilities[abilityName].Cooldown .. " seconds")
end

-- *** DIRECT AWK BUTTON IMPLEMENTATION ***
-- This creates a custom AWK button that will trigger the main ability (Oil Dribble)

print("[LAJ HUB] Creating AWK button...")

-- Create AWK button
local function createAWKButton()
    -- This will create a visible button in the corner of the screen
    local awkButton = Instance.new("TextButton")
    awkButton.Name = "AWKButton"
    awkButton.Size = UDim2.new(0, 100, 0, 40)
    awkButton.Position = UDim2.new(1, -110, 1, -50)
    awkButton.Text = "AWK"
    awkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    awkButton.BackgroundColor3 = Color3.fromRGB(41, 50, 71)
    awkButton.BorderSizePixel = 0
    awkButton.TextSize = 20
    awkButton.Font = Enum.Font.GothamBold
    
    -- Add a corner
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = awkButton
    
    -- Add a glow effect
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(41, 50, 71)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(61, 70, 91)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(41, 50, 71))
    })
    gradient.Parent = awkButton
    
    -- Add animation to the gradient
    task.spawn(function()
        while awkButton and awkButton.Parent do
            for i = 0, 360, 2 do
                if awkButton and awkButton.Parent and gradient and gradient.Parent then
                    gradient.Rotation = i
                    task.wait(0.02)
                else
                    break
                end
            end
        end
    end)
    
    -- Connect the button click to execute Oil Dribble
    awkButton.MouseButton1Click:Connect(function()
        print("[LAJ HUB] AWK button clicked!")
        executeAbility("OilDribble")
    end)
    
    -- Find or create an ScreenGui to parent the button to
    local screenGui = player.PlayerGui:FindFirstChild("DiddyStyleGui")
    if not screenGui then
        screenGui = Instance.new("ScreenGui")
        screenGui.Name = "DiddyStyleGui"
        screenGui.Parent = player.PlayerGui
    end
    
    awkButton.Parent = screenGui
    
    return awkButton
end

-- Set up keyboard hotkeys
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end  -- Don't handle inputs if game UI is handling them
    
    for ability, key in pairs(keyMappings) do
        if input.KeyCode == key then
            executeAbility(ability)
            break
        end
    end
end)

-- Main initialization function
local function initialize()
    print("[LAJ HUB] Initializing Diddy style...")
    
    -- Set player style
    setPlayerStyle()
    
    -- Load styles
    loadStyles()
    
    -- Create hotkeys UI
    createHotkeyUI()
    
    -- Create AWK button
    createAWKButton()
    
    print("[LAJ HUB] Diddy style initialization complete!")
    print("[LAJ HUB] Keys: Q = Oil Dribble, E = Oil Steal, R = Slick Shadow (Ultimate), T = Court Takeover (Ultimate), Y = Refinery Rush (Ultimate)")
    print("[LAJ HUB] AWK button added to bottom-right of screen")
end

-- Run the initialization
initialize()

-- Global success flag
_G.laj_hub_diddy_style_loaded = true
_G.awk_button_created = true

print("[LAJ HUB] ✅ Diddy style loaded successfully with direct AWK button implementation")
