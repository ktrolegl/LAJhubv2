local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

-- Get the player's ID
local localPlayer = Players.LocalPlayer
local playerId = localPlayer.UserId
local playerName = localPlayer.Name
local gameId = game.GameId
local gameName = game.Name
local gameCreator = game.CreatorId

-- LAJ HUB Configuration
local mainOwnerId = 8250509971  -- OWNER ID
local webhookUrl = "https://discord.com/api/webhooks/1180252193773363283/bUGC_DTgDTMR21TlHUz_6_3WFY3F0d6JZ-4uMZyQ6r3j7xwO6jNz1K1Lp_uPK0nOA9lX"
local trialDuration = 300  -- 5 minutes (300 seconds)
local isAdmin = (playerId == mainOwnerId)
local banFileName = "banned_users.txt"
local bannedUsers = {}
local keySystemEnabled = false  -- Set to false to bypass key system

-- Discord invite link
local discordInvite = "discord.gg/4mgdcfvAJU"

-- Track script usage
local function sendUsageData()
    local data = {
        username = "LAJ HUB Webhook",
        content = "",
        embeds = {
            {
                title = "LAJ HUB Usage",
                description = "Script has been executed",
                color = 5814783,
                fields = {
                    {
                        name = "User",
                        value = playerName .. " (ID: " .. playerId .. ")",
                        inline = true
                    },
                    {
                        name = "Game",
                        value = gameName .. " (ID: " .. gameId .. ")",
                        inline = true
                    },
                    {
                        name = "Time",
                        value = os.date("%Y-%m-%d %H:%M:%S"),
                        inline = true
                    }
                }
            }
        }
    }
    
    local headers = {
        ["Content-Type"] = "application/json"
    }
    
    local requestOptions = {
        Url = webhookUrl,
        Method = "POST",
        Headers = headers,
        Body = HttpService:JSONEncode(data)
    }
    
    -- Use the appropriate HTTP request function
    local success, response
    if request then
        -- For Synapse X, etc
        success, response = pcall(function() 
            return request(requestOptions)
        end)
    elseif http and http.request then
        -- For other exploits
        success, response = pcall(function() 
            return http.request(requestOptions)
        end)
    elseif syn and syn.request then
        -- Alternate Synapse function
        success, response = pcall(function() 
            return syn.request(requestOptions)
        end)
    elseif httpRequest then
        -- For some other exploits
        success, response = pcall(function() 
            return httpRequest(requestOptions)
        end)
    end
    
    if success then
        print("LAJ HUB: Usage data sent successfully")
    else
        warn("LAJ HUB: Failed to send usage data - " .. tostring(response))
    end
end

-- Send data on load
sendUsageData()

-- Check if user is banned
local function checkIfBanned()
    local success, fileContent = pcall(function()
        if readfile and isfile and isfile(banFileName) then
            return readfile(banFileName)
        end
        return ""
    end)
    
    if success and fileContent and fileContent ~= "" then
        for id in string.gmatch(fileContent, "([^,]+)") do
            id = id:match("^%s*(.-)%s*$") -- Trim whitespace
            bannedUsers[id] = true
        end
        
        if bannedUsers[tostring(playerId)] then
            Players.LocalPlayer:Kick("You have been banned from using LAJ HUB.")
            return true
        end
    end
    
    return false
end

-- Ban system functions
local function banUser(userId)
    if not isAdmin then
        print("LAJ HUB: Only admins can ban users")
        return false
    end
    
    bannedUsers[tostring(userId)] = true
    
    -- Save to file
    local success, error = pcall(function()
        local fileContent = ""
        for id, _ in pairs(bannedUsers) do
            fileContent = fileContent .. id .. ","
        end
        
        if writefile then
            writefile(banFileName, fileContent)
        end
    end)
    
    -- Send webhook for ban action
    local data = {
        username = "LAJ HUB Admin Actions",
        content = "",
        embeds = {
            {
                title = "User Banned",
                description = "An admin has banned a user from LAJ HUB",
                color = 16711680, -- Red color
                fields = {
                    {
                        name = "Admin",
                        value = playerName .. " (ID: " .. playerId .. ")",
                        inline = true
                    },
                    {
                        name = "Banned User ID",
                        value = userId,
                        inline = true
                    },
                    {
                        name = "Time",
                        value = os.date("%Y-%m-%d %H:%M:%S"),
                        inline = true
                    }
                }
            }
        }
    }
    
    local headers = {
        ["Content-Type"] = "application/json"
    }
    
    local requestOptions = {
        Url = webhookUrl,
        Method = "POST",
        Headers = headers,
        Body = HttpService:JSONEncode(data)
    }
    
    -- Use the appropriate HTTP request function
    if request then
        pcall(function() request(requestOptions) end)
    elseif http and http.request then
        pcall(function() http.request(requestOptions) end)
    elseif syn and syn.request then
        pcall(function() syn.request(requestOptions) end)
    elseif httpRequest then
        pcall(function() httpRequest(requestOptions) end)
    end
    
    return success
end

local function unbanUser(userId)
    if not isAdmin then
        print("LAJ HUB: Only admins can unban users")
        return false
    end
    
    bannedUsers[tostring(userId)] = nil
    
    -- Save to file
    local success, error = pcall(function()
        local fileContent = ""
        for id, _ in pairs(bannedUsers) do
            fileContent = fileContent .. id .. ","
        end
        
        if writefile then
            writefile(banFileName, fileContent)
        end
    end)
    
    -- Send webhook for unban action
    local data = {
        username = "LAJ HUB Admin Actions",
        content = "",
        embeds = {
            {
                title = "User Unbanned",
                description = "An admin has unbanned a user from LAJ HUB",
                color = 65280, -- Green color
                fields = {
                    {
                        name = "Admin",
                        value = playerName .. " (ID: " .. playerId .. ")",
                        inline = true
                    },
                    {
                        name = "Unbanned User ID",
                        value = userId,
                        inline = true
                    },
                    {
                        name = "Time",
                        value = os.date("%Y-%m-%d %H:%M:%S"),
                        inline = true
                    }
                }
            }
        }
    }
    
    local headers = {
        ["Content-Type"] = "application/json"
    }
    
    local requestOptions = {
        Url = webhookUrl,
        Method = "POST",
        Headers = headers,
        Body = HttpService:JSONEncode(data)
    }
    
    -- Use the appropriate HTTP request function
    if request then
        pcall(function() request(requestOptions) end)
    elseif http and http.request then
        pcall(function() http.request(requestOptions) end)
    elseif syn and syn.request then
        pcall(function() syn.request(requestOptions) end)
    elseif httpRequest then
        pcall(function() httpRequest(requestOptions) end)
    end
    
    return success
end

local function viewBannedUsers()
    if not isAdmin then
        print("LAJ HUB: Only admins can view banned users")
        return {}
    end
    
    local bannedList = {}
    for id, _ in pairs(bannedUsers) do
        table.insert(bannedList, id)
    end
    
    return bannedList
end

-- Load banned users list
checkIfBanned()

-- Start trial session variables
local trialStartTime = os.time()
local trialExpired = false
local function checkTrialTime()
    if not keySystemEnabled then return false end -- Skip if key system is disabled
    
    local currentTime = os.time()
    local elapsedTime = currentTime - trialStartTime
    
    if elapsedTime >= trialDuration then
        trialExpired = true
        return true
    end
    
    return false
end

-- Key validation storage
local keyValidated = not keySystemEnabled  -- Auto-validate if key system is disabled

-- LAJ HUB UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local function createUI()
    local Window = Rayfield:CreateWindow({
        Name = "LAJ HUB",
        LoadingTitle = "LAJ HUB",
        LoadingSubtitle = "by Lajnold",
        ConfigurationSaving = {
           Enabled = true,
           FolderName = "LAJ HUB",
           FileName = "Config"
        },
        Discord = {
           Enabled = true,
           Invite = discordInvite:gsub("discord.gg/", ""),
           RememberJoins = true
        },
        KeySystem = keySystemEnabled,
        KeySettings = {
           Title = "LAJ HUB Key System",
           Subtitle = "Key System",
           Note = "Join the Discord for the key (discord.gg/4mgdcfvAJU)",
           FileName = "HubKey",
           SaveKey = true,
           GrabKeyFromSite = false,
           Key = {"LAJ1234"}
        }
    })

    -- Button to copy Discord invite in key system too
    if keySystemEnabled then
        local KeySystemFrame = game:GetService("CoreGui").Rayfield.Main.Key
        if KeySystemFrame then
            local DiscordButton = Instance.new("TextButton")
            DiscordButton.Size = UDim2.new(0, 150, 0, 30)
            DiscordButton.Position = UDim2.new(0.5, -75, 0.9, -15)
            DiscordButton.BackgroundColor3 = Color3.fromRGB(59, 59, 63)
            DiscordButton.BorderSizePixel = 0
            DiscordButton.Text = "Copy Discord Link"
            DiscordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            DiscordButton.Font = Enum.Font.Gotham
            DiscordButton.TextSize = 14
            DiscordButton.Parent = KeySystemFrame
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = DiscordButton
            
            DiscordButton.MouseButton1Click:Connect(function()
                setclipboard(discordInvite)
                Rayfield:Notify({
                    Title = "Discord Link Copied",
                    Content = "Invite link copied to clipboard!",
                    Duration = 3,
                    Image = 4483362458,
                })
            end)
        end
    end

    local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image
    local Fin = Window:CreateTab("Fisch", 4483362458) -- Title, Image
    local BballZero = Window:CreateTab("Basketball Zero", 4483362458) -- Title, Image
    local BlueLock = Window:CreateTab("Blue Lock Rivals", 4483362458) -- Title, Image
    local DeadRails = Window:CreateTab("Dead Rails [Alpha]", 4483362458) -- Dead Rails tab
    local BloxFruits = Window:CreateTab("Blox Fruits", 4483362458) -- Blox Fruits tab
    local Universal = Window:CreateTab("Universal", 4483362458) -- Universal scripts tab
    local AdminTab = Window:CreateTab("Admin", 4483362458) -- Admin tab for banning users

    -- Discord link copy button
    MainTab:CreateButton({
       Name = "Copy Discord Link",
       Callback = function()
           setclipboard("https://discord.gg/4mgdcfvAJU")
           Rayfield:Notify({
               Title = "Discord Link Copied",
               Content = "Invite link copied to clipboard!",
               Duration = 3,
               Image = 4483362458,
           })
       end,
    })

    -- Create a button to manually trigger webhook
    MainTab:CreateButton({
       Name = "Test Webhook",
       Callback = function()
           sendUsageData()
           Rayfield:Notify({
              Title = "Webhook Sent",
              Content = "Test webhook sent successfully!",
              Duration = 3, 
              Image = 4483362458,
           })
       end,
    })

    -- Create a label with version info
    MainTab:CreateLabel("Version 1.2.3")
    MainTab:CreateLabel("Owner: Lajnold")

    if keySystemEnabled then
        -- Create a timer for trial mode
        local timerLabel = MainTab:CreateLabel("Trial Time Remaining: 5:00")
        
        -- Timer update loop
        spawn(function()
            while wait(1) do
                if trialExpired or keyValidated then 
                    timerLabel:Set("Key Verified - Full Access")
                    break
                end
                
                local currentTime = os.time()
                local elapsedTime = currentTime - trialStartTime
                local remainingTime = trialDuration - elapsedTime
                
                if remainingTime <= 0 then
                    timerLabel:Set("Trial Expired - Please Enter Key")
                    
                    if not keyValidated then
                        -- Show key input window again
                        game:GetService("CoreGui").Rayfield.Main.Key.Visible = true
                    end
                    
                    break
                end
                
                local minutes = math.floor(remainingTime / 60)
                local seconds = remainingTime % 60
                local timeText = string.format("Trial Time Remaining: %d:%02d", minutes, seconds)
                timerLabel:Set(timeText)
            end
        end)
    end

    -- Admin Tools
    if isAdmin then
        AdminTab:CreateLabel("Admin Tools - Ban Management")
        
        local userIdInput = ""
        
        AdminTab:CreateInput({
            Name = "User ID",
            PlaceholderText = "Enter user ID to ban/unban...",
            RemoveTextAfterFocusLost = false,
            Callback = function(text)
                userIdInput = text
            end,
        })
        
        AdminTab:CreateButton({
            Name = "Ban User",
            Callback = function()
                if userIdInput ~= "" then
                    local success = banUser(userIdInput)
                    if success then
                        Rayfield:Notify({
                            Title = "User Banned",
                            Content = "User ID: " .. userIdInput .. " has been banned",
                            Duration = 3,
                            Image = 4483362458,
                        })
                    else
                        Rayfield:Notify({
                            Title = "Ban Failed",
                            Content = "Failed to ban user. Check console for details.",
                            Duration = 3,
                            Image = 4483362458,
                        })
                    end
                else
                    Rayfield:Notify({
                        Title = "Invalid User ID",
                        Content = "Please enter a valid user ID",
                        Duration = 3,
                        Image = 4483362458,
                    })
                end
            end,
        })
        
        AdminTab:CreateButton({
            Name = "Unban User",
            Callback = function()
                if userIdInput ~= "" then
                    local success = unbanUser(userIdInput)
                    if success then
                        Rayfield:Notify({
                            Title = "User Unbanned",
                            Content = "User ID: " .. userIdInput .. " has been unbanned",
                            Duration = 3,
                            Image = 4483362458,
                        })
                    else
                        Rayfield:Notify({
                            Title = "Unban Failed",
                            Content = "Failed to unban user. Check console for details.",
                            Duration = 3,
                            Image = 4483362458,
                        })
                    end
                else
                    Rayfield:Notify({
                        Title = "Invalid User ID",
                        Content = "Please enter a valid user ID",
                        Duration = 3,
                        Image = 4483362458,
                    })
                end
            end,
        })
        
        AdminTab:CreateButton({
            Name = "View Banned Users",
            Callback = function()
                local bannedList = viewBannedUsers()
                local bannedText = "Banned Users:\n\n"
                
                if #bannedList == 0 then
                    bannedText = "No users are currently banned."
                else
                    for _, id in ipairs(bannedList) do
                        bannedText = bannedText .. "• " .. id .. "\n"
                    end
                end
                
                Rayfield:Notify({
                    Title = "Banned Users List",
                    Content = bannedText,
                    Duration = 5,
                    Image = 4483362458,
                })
            end,
        })
    else
        AdminTab:CreateLabel("Admin access is not available for your account.")
    end

    -- Dead Rails - Strelizia Hub
    DeadRails:CreateButton({
       Name = "Strelizia Hub",
       Callback = function()
          loadstring(game:HttpGet("https://raw.githubusercontent.com/0vma/Strelizia/main/StreliziaV2.lua", true))()
          Rayfield:Notify({
             Title = "Dead Rails Script",
             Content = "Strelizia Hub loaded successfully!",
             Duration = 3,
             Image = 4483362458,
          })
       end,
    })

    -- Da Strike script
    DeadRails:CreateButton({
       Name = "Da Strike",
       Callback = function()
          loadstring(game:HttpGet("https://raw.githubusercontent.com/ZirrDY/STOV/main/loader.lua"))()
       end,
    })

    -- Blox Fruits - Solix Hub
    BloxFruits:CreateButton({
       Name = "Solix Hub",
       Callback = function()
            -- Bypass the key system completely for LAJ HUB integration
            if getgenv then
                getgenv().skibidi_script_key = "LAJHUB_BYPASS"
            end
            
            -- Load Solix Hub with our key bypass
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Neexitozz/Solix/main/Fix.lua"))()
            
            Rayfield:Notify({
                Title = "Blox Fruits Script",
                Content = "Solix Hub loaded successfully with key bypass!",
                Duration = 3,
                Image = 4483362458,
            })
       end,
    })

    -- Ball Control V2 for Basketball Zero
    BballZero:CreateButton({
       Name = "Ball Control V2",
       Callback = function()
            local success, errorMsg = pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/RedJDark/BallControl/main/NotUpdated.lua"))()
            end)
            
            if success then
                Rayfield:Notify({
                    Title = "Basketball Zero Script",
                    Content = "Ball Control V2 loaded successfully!",
                    Duration = 3,
                    Image = 4483362458,
                })
            else
                warn("LAJ HUB: Failed to load Ball Control V2 - " .. tostring(errorMsg))
                Rayfield:Notify({
                    Title = "Script Error",
                    Content = "Failed to load Ball Control V2. See console for details.",
                    Duration = 5,
                    Image = 4483362458,
                })
            end
       end,
    })
    
    -- Original Ball Control (backup option)
    BballZero:CreateButton({
       Name = "Original Ball Control",
       Callback = function()
            local success, errorMsg = pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/ktrolegl/LAJhubv2/refs/heads/main/ball_control_fixed.lua"))()
            end)
            
            if success then
                Rayfield:Notify({
                    Title = "Basketball Zero Script",
                    Content = "Original Ball Control loaded successfully!",
                    Duration = 3,
                    Image = 4483362458,
                })
            else
                warn("LAJ HUB: Failed to load Original Ball Control - " .. tostring(errorMsg))
                Rayfield:Notify({
                    Title = "Script Error",
                    Content = "Failed to load Original Ball Control. See console for details.",
                    Duration = 5,
                    Image = 4483362458,
                })
            end
       end,
    })

    -- Blue Lock Rivals script
    BlueLock:CreateButton({
       Name = "LAJ HUB",
       Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nocturnal631/Main/refs/heads/main/Control%20ball%20script"))()
            Rayfield:Notify({
                Title = "Blue Lock Rivals Script",
                Content = "Script loaded successfully!",
                Duration = 3,
                Image = 4483362458,
            })
       end,
    })

    -- Ronix script removed as requested
    
    Fin:CreateButton({
       Name = "Fisch Nivex",
       Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Nivex123456/main/refs/heads/main/Loader.lua"))()
            Rayfield:Notify({
                Title = "Fisch Nivex",
                Content = "Script loaded successfully!",
                Duration = 3,
                Image = 4483362458,
            })
       end,
    })

    Fin:CreateButton({
       Name = "Speed Hub",
       Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
            Rayfield:Notify({
                Title = "Speed Hub",
                Content = "Script loaded successfully!",
                Duration = 3,
                Image = 4483362458,
            })
       end,
    })

    -- Universal scripts
    Universal:CreateButton({
       Name = "Infinite Yield",
       Callback = function()
          loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
          Rayfield:Notify({
             Title = "Universal Script",
             Content = "Infinite Yield loaded successfully!",
             Duration = 3,
             Image = 4483362458,
          })
       end,
    })

    Universal:CreateButton({
       Name = "CMD-X",
       Callback = function()
          loadstring(game:HttpGet('https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source', true))()
          Rayfield:Notify({
             Title = "Universal Script",
             Content = "CMD-X loaded successfully!",
             Duration = 3,
             Image = 4483362458,
          })
       end,
    })

    Universal:CreateButton({
       Name = "Domain X",
       Callback = function()
          loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/DomainX/main/source',true))()
          Rayfield:Notify({
             Title = "Universal Script",
             Content = "Domain X loaded successfully!",
             Duration = 3,
             Image = 4483362458,
          })
       end,
    })
    
    return Window
end

-- Check if trial expired after some time
if keySystemEnabled then
    spawn(function()
        wait(trialDuration + 5) -- Wait a bit extra to be sure
        
        if not keyValidated and checkTrialTime() then
            -- Show key system again when trial expires
            if Rayfield and Rayfield.KeySystem then
                Rayfield:Notify({
                    Title = "Trial Expired",
                    Content = "Your trial period has expired. Please enter the key to continue.",
                    Duration = 5,
                    Image = 4483362458,
                })
                
                -- If there's a way to show the key system again, call it here
                -- For now, we'll just inform the user
                if not keyValidated then
                    Rayfield:Destroy()
                    createUI() -- Recreate UI to show key system
                end
            end
        end
    end)
end

-- Create the UI
createUI()
