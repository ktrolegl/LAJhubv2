-- LAJ HUB Blox Fruits Scripts
-- Optimized for Mobile and PC Users

repeat task.wait() until game:IsLoaded()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local VirtualUser = game:GetService("VirtualUser")

local Player = Players.LocalPlayer
local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)
local CommF = Remotes:WaitForChild("CommF_", 9e9)
local Enemies = workspace:WaitForChild("Enemies", 9e9)
local Boats = workspace:WaitForChild("Boats", 9e9)

-- Game Place ID check
local Sea1 = game.PlaceId == 2753915549  -- First Sea
local Sea2 = game.PlaceId == 4442272183  -- Second Sea
local Sea3 = game.PlaceId == 7449423635  -- Third Sea

-- UI Library (Rayfield)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
    Name = "LAJ HUB | Blox Fruits",
    LoadingTitle = "LAJ HUB Premium",
    LoadingSubtitle = "by LAJ Development Team",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "LAJHub",
        FileName = "BloxFruits"
    },
    KeySystem = false,
    KeySettings = {
        Title = "LAJ HUB | Key System",
        Subtitle = "Enter Key to Access",
        Note = "Join Discord for Key",
        FileName = "LAJKey",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"LAJHUB"}
    }
})

-- Anti-AFK
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Initialize settings
_G.Settings = {
    AutoFarm = false,
    FastAttack = true,
    AutoQuest = true,
    KillAura = false,
    TweenSpeed = 350,
    SeaBoatSpeed = 350,
    ESP = {
        Players = false,
        Chests = false,
        Fruits = false,
        Flowers = false
    },
    AutoRaid = false,
    AutoBuyHaki = false,
    NoClip = true,
    HideDamage = true,
    HideUI = false,
    SelectedBoss = "",
    AutoFarmBoss = false,
    WhiteScreen = false,
    AutoCollectFruit = false,
    AutoStoreFruit = false,
    SelectWeapon = "",
    SkillsConfig = {
        Z = true,
        X = true,
        C = true,
        V = true
    }
}

-- Function to get fruit names
local function GetFruitName(Fruit)
    if Fruit == "Rocket Fruit" then return "Rocket-Rocket"
    elseif Fruit == "Spin Fruit" then return "Spin-Spin"
    elseif Fruit == "Chop Fruit" then return "Chop-Chop"
    elseif Fruit == "Spring Fruit" then return "Spring-Spring"
    elseif Fruit == "Bomb Fruit" then return "Bomb-Bomb"
    elseif Fruit == "Smoke Fruit" then return "Smoke-Smoke"
    elseif Fruit == "Spike Fruit" then return "Spike-Spike"
    elseif Fruit == "Flame Fruit" then return "Flame-Flame"
    elseif Fruit == "Falcon Fruit" then return "Falcon-Falcon"
    elseif Fruit == "Ice Fruit" then return "Ice-Ice"
    elseif Fruit == "Sand Fruit" then return "Sand-Sand"
    elseif Fruit == "Dark Fruit" then return "Dark-Dark"
    elseif Fruit == "Ghost Fruit" then return "Ghost-Ghost"
    elseif Fruit == "Diamond Fruit" then return "Diamond-Diamond"
    elseif Fruit == "Light Fruit" then return "Light-Light"
    elseif Fruit == "Rubber Fruit" then return "Rubber-Rubber"
    elseif Fruit == "Barrier Fruit" then return "Barrier-Barrier"
    elseif Fruit == "Magma Fruit" then return "Magma-Magma"
    elseif Fruit == "Quake Fruit" then return "Quake-Quake"
    elseif Fruit == "Buddha Fruit" then return "Buddha-Buddha"
    elseif Fruit == "Love Fruit" then return "Love-Love"
    elseif Fruit == "Spider Fruit" then return "Spider-Spider"
    elseif Fruit == "Sound Fruit" then return "Sound-Sound"
    elseif Fruit == "Phoenix Fruit" then return "Phoenix-Phoenix"
    elseif Fruit == "Portal Fruit" then return "Portal-Portal"
    elseif Fruit == "Rumble Fruit" then return "Rumble-Rumble"
    elseif Fruit == "Pain Fruit" then return "Pain-Pain"
    elseif Fruit == "Blizzard Fruit" then return "Blizzard-Blizzard"
    elseif Fruit == "Gravity Fruit" then return "Gravity-Gravity"
    elseif Fruit == "Mammoth Fruit" then return "Mammoth-Mammoth"
    elseif Fruit == "T-Rex Fruit" then return "T-Rex-T-Rex"
    elseif Fruit == "Dough Fruit" then return "Dough-Dough"
    elseif Fruit == "Shadow Fruit" then return "Shadow-Shadow"
    elseif Fruit == "Venom Fruit" then return "Venom-Venom"
    elseif Fruit == "Control Fruit" then return "Control-Control"
    elseif Fruit == "Spirit Fruit" then return "Spirit-Spirit"
    elseif Fruit == "Dragon Fruit" then return "Dragon-Dragon"
    elseif Fruit == "Leopard Fruit" then return "Leopard-Leopard"
    elseif Fruit == "Kitsune Fruit" then return "Kitsune-Kitsune"
    end
    return nil
end

-- Boss List for each sea
local BossList = {
    -- Sea 1 (First Sea)
    Sea1 = {
        -- Raid Bosses
        "Greybeard",
        "The Saw",
        "Saber Expert",
        -- Normal Bosses
        "The Gorilla King",
        "Bobby",
        "Yeti",
        "Vice Admiral",
        "Warden",
        "Chief Warden",
        "Swan",
        "Magma Admiral",
        "Fishman Lord",
        "Wysper",
        "Thunder God",
        "Cyborg"
    },
    -- Sea 2 (Second Sea)
    Sea2 = {
        -- Raid Bosses
        "Darkbeard",
        "Cursed Captain",
        "Order",
        "Don Swan",
        -- Normal Bosses
        "Diamond",
        "Jeremy",
        "Fajita",
        "Smoke Admiral",
        "Awakened Ice Admiral",
        "Tide Keeper"
    },
    -- Sea 3 (Third Sea)
    Sea3 = {
        -- Raid Bosses
        "Dough King",
        "Cake Prince",
        "rip_indra True Form",
        "Soul Reaper",
        -- Normal Bosses
        "Stone",
        "Island Empress",
        "Kilo Admiral",
        "Captain Elephant",
        "Beautiful Pirate",
        "Cake Queen",
        "Longma"
    }
}

-- Function to get boss quest information
local function GetBossQuest(BossName)
    -- Bosses Sea 1
    if BossName == "The Gorilla King" then
        return true, CFrame.new(-1128, 6, -451), "JungleQuest"
    elseif BossName == "Bobby" then
        return true, CFrame.new(-1131, 14, 4080), "BuggyQuest1"
    elseif BossName == "Yeti" then
        return true, CFrame.new(1185, 106, -1518), "SnowQuest"
    elseif BossName == "Vice Admiral" then
        return true, CFrame.new(-4807, 21, 4360), "MarineQuest2", 2
    elseif BossName == "Swan" then
        return true, CFrame.new(5230, 4, 749), "ImpelQuest"
    elseif BossName == "Chief Warden" then
        return true, CFrame.new(5230, 4, 749), "ImpelQuest", 2
    elseif BossName == "Warden" then
        return true, CFrame.new(5230, 4, 749), "ImpelQuest", 1
    elseif BossName == "Magma Admiral" then
        return true, CFrame.new(-5694, 18, 8735), "MagmaQuest"
    elseif BossName == "Fishman Lord" then
        return true, CFrame.new(61350, 31, 1095), "FishmanQuest"
    elseif BossName == "Wysper" then
        return true, CFrame.new(-7927, 5551, -637), "SkyExp1Quest"
    elseif BossName == "Thunder God" then
        return true, CFrame.new(-7751, 5607, -2315), "SkyExp2Quest"
    elseif BossName == "Cyborg" then
        return true, CFrame.new(6138, 10, 3939), "FountainQuest"
    elseif BossName == "Saber Expert" then
        return false, CFrame.new(-1461, 30, -51)
    elseif BossName == "The Saw" then
        return false, CFrame.new(-690, 15, 1583)
    elseif BossName == "Greybeard" then
        return false, CFrame.new(-4807, 21, 4360)
    -- Bosses Sea 2
    elseif BossName == "Diamond" then
        return true, CFrame.new(-1569, 199, -31), "Area1Quest"
    elseif BossName == "Jeremy" then
        return true, CFrame.new(2316, 449, 787), "Area2Quest"
    elseif BossName == "Fajita" then
        return true, CFrame.new(-2086, 73, -4208), "MarineQuest3"
    elseif BossName == "Smoke Admiral" then
        return true, CFrame.new(-5078, 24, -5352), "IceSideQuest"
    elseif BossName == "Awakened Ice Admiral" then
        return true, CFrame.new(6473, 297, -6944), "FrostQuest"
    elseif BossName == "Tide Keeper" then
        return true, CFrame.new(-3711, 77, -11469), "ForgottenQuest"
    elseif BossName == "Don Swan" then
        return false, CFrame.new(2289, 15, 808)
    elseif BossName == "Cursed Captain" then
        return false, CFrame.new(912, 186, 33591)
    elseif BossName == "Darkbeard" then
        return false, CFrame.new(3695, 13, -3599)
    -- Bosses Sea 3
    elseif BossName == "Longma" then
        return false, CFrame.new(-10218, 333, -9444)
    elseif BossName == "Stone" then
        return true, CFrame.new(-1049, 40, 6791), "PiratePortQuest"
    elseif BossName == "Beautiful Pirate" then
        return true, CFrame.new(5241, 23, 129), "DeepForestIsland2"
    elseif BossName == "Island Empress" then
        return true, CFrame.new(5730, 602, 199), "AmazonQuest2"
    elseif BossName == "Kilo Admiral" then
        return true, CFrame.new(2889, 424, -7233), "MarineTreeIsland"
    elseif BossName == "Captain Elephant" then
        return true, CFrame.new(-13393, 319, -8423), "DeepForestIsland"
    elseif BossName == "Cake Queen" then
        return true, CFrame.new(-710, 382, -11150), "IceCreamIslandQuest"
    elseif BossName == "Dough King" or BossName == "Cake Prince" then
        return false, CFrame.new(-2103, 70, -12165)
    elseif BossName == "rip_indra True Form" then
        return false, CFrame.new(-5333, 424, -2673)
    end
end

-- Create player platform
local block = Instance.new("Part", workspace)
block.Size = Vector3.new(10, 1, 10)
block.Name = "LAJHubPlayerPlatform"
block.Anchored = true
block.CanCollide = true
block.Transparency = 0.5
block.Material = Enum.Material.ForceField

-- Anti-falling platform system
task.spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Settings.AutoFarm or _G.Settings.AutoFarmBoss or _G.Settings.AutoRaid or _G.Settings.NoClip then
                if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                    block.CFrame = CFrame.new(Player.Character.HumanoidRootPart.Position.X, 
                                            Player.Character.HumanoidRootPart.Position.Y - 4, 
                                            Player.Character.HumanoidRootPart.Position.Z)
                    
                    -- Disable character collision
                    for _, part in pairs(Player.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                    
                    -- Reset stun state if stunned
                    if Player.Character:FindFirstChild("Stun") and Player.Character.Stun.Value ~= 0 then
                        Player.Character.Stun.Value = 0
                    end
                    
                    -- Reset busy state if busy
                    if Player.Character:FindFirstChild("Busy") and Player.Character.Busy.Value then
                        Player.Character.Busy.Value = false
                    end
                end
            else
                block.CFrame = CFrame.new(0, -1000, 0) -- Hide platform when not needed
            end
        end)
    end
end)

-- Current active quest information
local Quest = {CFrame.new(), CFrame.new(), "", "", 1}

-- Fire server remote function
local function FireRemote(...)
    return CommF:InvokeServer(...)
end

-- Kill Aura Function
local function KillAura()
    local function KillEnemy(_, Enemy)
        local EnemyHumanoid = Enemy:FindFirstChild("Humanoid")
        
        if EnemyHumanoid and EnemyHumanoid.Health > 0 then
            local PlayerPP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            local EnemyPP = Enemy:FindFirstChild("HumanoidRootPart")
            
            if PlayerPP and EnemyPP and (EnemyPP.Position - PlayerPP.Position).Magnitude < 500 then
                EnemyHumanoid.Health = 0
                EnemyPP.Size = Vector3.new(50, 50, 50)
                EnemyPP.CanCollide = false
                sethiddenproperty(Player, "SimulationRadius", math.huge)
                
                -- Use skills if enabled
                if _G.Settings.SkillsConfig.Z then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "Z", false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "Z", false, game)
                end
                if _G.Settings.SkillsConfig.X then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "X", false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "X", false, game)
                end
                if _G.Settings.SkillsConfig.C then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "C", false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "C", false, game)
                end
                if _G.Settings.SkillsConfig.V then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, "V", false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, "V", false, game)
                end
            end
        else
            -- Try to destroy the head if humanoid is not available
            local EnemyHead = Enemy:FindFirstChild("Head")
            if EnemyHead then
                EnemyHead:Destroy()
            end
        end
    end
    
    -- Kill enemies in workspace and replicated storage
    for _, Enemy in pairs(Enemies:GetChildren()) do
        KillEnemy(nil, Enemy)
    end
    
    for _, Enemy in pairs(ReplicatedStorage:GetChildren()) do
        if Enemy:FindFirstChild("Humanoid") then
            KillEnemy(nil, Enemy)
        end
    end
end

-- Auto Kill Aura thread
task.spawn(function()
    while true do
        wait()
        if _G.Settings.KillAura then
            KillAura()
        end
    end
end)

-- Fast Attack Function
task.spawn(function()
    while true do
        wait()
        if _G.Settings.FastAttack then
            -- Fast Attack implementation
            pcall(function()
                local Combat = Player.Backpack:FindFirstChild("Combat") or Player.Character:FindFirstChild("Combat")
                
                if Combat and Player.Character:FindFirstChild("Humanoid") then
                    if not Player.Character:FindFirstChild("Combat") then
                        Player.Character.Humanoid:EquipTool(Combat)
                    end
                    
                    -- Simulate attack
                    Combat:Activate()
                    wait(0.1)
                    Combat:Deactivate()
                end
                
                -- Fast attack using weapons
                local ActiveWeapon = Player.Character:FindFirstChildOfClass("Tool")
                if ActiveWeapon and ActiveWeapon:FindFirstChild("CombatTool") then
                    ActiveWeapon:Activate()
                    wait(0.1)
                    ActiveWeapon:Deactivate()
                end
            end)
        end
    end
end)

-- Teleport function
local function TeleportTo(Position)
    if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local HumanoidRootPart = Player.Character.HumanoidRootPart
    local Distance = (HumanoidRootPart.Position - Position).Magnitude
    
    -- Use TweenService for smooth movement
    local Tween = TweenService:Create(
        HumanoidRootPart,
        TweenInfo.new(Distance / _G.Settings.TweenSpeed, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(Position)}
    )
    
    Tween:Play()
    return Tween
end

-- ESP Functions
local function AddESP(Part, Text, Color)
    -- Remove existing ESP
    for _, v in pairs(Part:GetChildren()) do
        if v.Name == "LAJHubESP" then
            v:Destroy()
        end
    end
    
    -- Create ESP elements
    local BillboardGui = Instance.new("BillboardGui")
    BillboardGui.Name = "LAJHubESP"
    BillboardGui.Adornee = Part
    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
    BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
    BillboardGui.AlwaysOnTop = true
    BillboardGui.Parent = Part
    
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Name = "ESPText"
    TextLabel.Size = UDim2.new(0, 200, 0, 50)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Text = Text
    TextLabel.Font = Enum.Font.GothamBold
    TextLabel.TextSize = 16
    TextLabel.TextColor3 = Color or Color3.fromRGB(255, 255, 255)
    TextLabel.TextStrokeTransparency = 0.5
    TextLabel.Parent = BillboardGui
    
    -- Add distance updating
    if Part:IsA("BasePart") and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        spawn(function()
            while BillboardGui and BillboardGui.Parent and wait(0.1) do
                local Distance = (Player.Character.HumanoidRootPart.Position - Part.Position).Magnitude
                TextLabel.Text = Text .. " [" .. math.floor(Distance) .. "m]"
            end
        end)
    end
    
    -- Add highlight
    local Highlight = Instance.new("Highlight")
    Highlight.FillColor = Color or Color3.fromRGB(255, 255, 255)
    Highlight.OutlineColor = Color3.new(0, 0, 0)
    Highlight.FillTransparency = 0.7
    Highlight.OutlineTransparency = 0
    Highlight.Parent = Part
    
    return BillboardGui
end

-- ESP Update Function
task.spawn(function()
    while wait(1) do
        -- Player ESP
        if _G.Settings.ESP.Players then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    AddESP(player.Character.HumanoidRootPart, player.Name, Color3.fromRGB(255, 0, 0))
                end
            end
        end
        
        -- Chest ESP
        if _G.Settings.ESP.Chests then
            for _, chest in pairs(workspace:GetChildren()) do
                if chest.Name:find("Chest") and chest:IsA("BasePart") then
                    AddESP(chest, chest.Name, Color3.fromRGB(255, 215, 0))
                end
            end
        end
        
        -- Fruit ESP
        if _G.Settings.ESP.Fruits then
            for _, fruit in pairs(workspace:GetChildren()) do
                if fruit.Name:find("Fruit") and fruit:IsA("Tool") then
                    AddESP(fruit.Handle, fruit.Name, Color3.fromRGB(0, 255, 0))
                end
            end
        end
        
        -- Flower ESP
        if _G.Settings.ESP.Flowers then
            for _, flower in pairs(workspace:GetChildren()) do
                if flower.Name:find("Flower") and flower:IsA("BasePart") then
                    AddESP(flower, flower.Name, Color3.fromRGB(255, 0, 255))
                end
            end
        end
    end
end)

-- Function to get nearby quest level enemies
local function GetNearbyQuestEnemies()
    local Enemies = {}
    for _, v in pairs(workspace.Enemies:GetChildren()) do
        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            if v.Name:find(Quest[3]) or v.Name:find(Quest[4]) then
                table.insert(Enemies, v)
            end
        end
    end
    return Enemies
end

-- Auto Farm function
task.spawn(function()
    while wait() do
        if _G.Settings.AutoFarm then
            pcall(function()
                -- Basic Auto Farm implementation
                if _G.Settings.AutoQuest then
                    -- Get quest if needed
                    local QuestCheck = Player.PlayerGui.Main.Quest
                    if not QuestCheck.Visible or (QuestCheck.Visible and QuestCheck.Container.QuestTitle.Title.Text:find("Defeat") and not QuestCheck.Container.QuestTitle.Title.Text:find(Quest[3])) then
                        -- Go to quest giver
                        if Quest[1] ~= CFrame.new() then
                            local Tween = TeleportTo(Quest[1].Position)
                            if Tween then Tween.Completed:Wait() end
                            
                            -- Wait for NPCs to load
                            wait(1)
                            
                            -- Fire quest remote
                            FireRemote("StartQuest", Quest[5], Quest[4])
                            wait(0.5)
                        end
                    end
                end
                
                -- Find enemies
                local Enemies = GetNearbyQuestEnemies()
                if #Enemies > 0 then
                    local ClosestEnemy = Enemies[1]
                    local ClosestDistance = (Player.Character.HumanoidRootPart.Position - ClosestEnemy.HumanoidRootPart.Position).Magnitude
                    
                    for _, enemy in pairs(Enemies) do
                        local Distance = (Player.Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                        if Distance < ClosestDistance then
                            ClosestEnemy = enemy
                            ClosestDistance = Distance
                        end
                    end
                    
                    -- Teleport to enemy
                    TeleportTo(ClosestEnemy.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                    
                    -- Equip weapon if specified
                    if _G.Settings.SelectWeapon ~= "" then
                        local Weapon = Player.Backpack:FindFirstChild(_G.Settings.SelectWeapon) or Player.Character:FindFirstChild(_G.Settings.SelectWeapon)
                        if Weapon and not Player.Character:FindFirstChild(_G.Settings.SelectWeapon) then
                            Player.Character.Humanoid:EquipTool(Weapon)
                        end
                    end
                else
                    -- No enemies found, look for spawns
                    if Sea1 then
                        if Player.Data.Level.Value >= 1 and Player.Data.Level.Value < 10 then
                            Quest = {CFrame.new(1059.37, 16.36, 1549.75), CFrame.new(1059.37, 16.36, 1549.75), "Bandit", "BanditQuest1", 1}
                        elseif Player.Data.Level.Value >= 10 and Player.Data.Level.Value < 15 then
                            Quest = {CFrame.new(1059.37, 16.36, 1549.75), CFrame.new(1059.37, 16.36, 1549.75), "Monkey", "JungleQuest", 1}
                        elseif Player.Data.Level.Value >= 15 and Player.Data.Level.Value < 30 then
                            Quest = {CFrame.new(-1604.12, 36.9774, 153.451), CFrame.new(-1604.12, 36.9774, 153.451), "Gorilla", "JungleQuest", 2}
                        -- Add more level checks and quests
                        end
                    elseif Sea2 then
                        -- Second sea quests
                    elseif Sea3 then
                        -- Third sea quests
                    end
                    
                    -- Teleport to quest location
                    if Quest[2] ~= CFrame.new() then
                        TeleportTo(Quest[2].Position)
                    end
                end
            end)
        end
    end
end)

-- Auto Farm Boss function
task.spawn(function()
    while wait() do
        if _G.Settings.AutoFarmBoss and _G.Settings.SelectedBoss ~= "" then
            pcall(function()
                local Boss
                
                -- Find boss in workspace
                for _, v in pairs(workspace.Enemies:GetChildren()) do
                    if v.Name == _G.Settings.SelectedBoss and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                        Boss = v
                        break
                    end
                end
                
                -- Find boss in ReplicatedStorage if not in workspace
                if not Boss then
                    for _, v in pairs(ReplicatedStorage:GetChildren()) do
                        if v.Name == _G.Settings.SelectedBoss and v:FindFirstChild("Humanoid") then
                            Boss = v
                            break
                        end
                    end
                end
                
                if Boss then
                    -- Teleport to boss
                    TeleportTo(Boss.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                    
                    -- Equip weapon if specified
                    if _G.Settings.SelectWeapon ~= "" then
                        local Weapon = Player.Backpack:FindFirstChild(_G.Settings.SelectWeapon) or Player.Character:FindFirstChild(_G.Settings.SelectWeapon)
                        if Weapon and not Player.Character:FindFirstChild(_G.Settings.SelectWeapon) then
                            Player.Character.Humanoid:EquipTool(Weapon)
                        end
                    end
                else
                    -- Boss not found, get quest or go to spawn location
                    local NeedQuest, QuestCFrame, QuestName, QuestNumber = GetBossQuest(_G.Settings.SelectedBoss)
                    
                    if NeedQuest then
                        -- Get quest if needed
                        local QuestCheck = Player.PlayerGui.Main.Quest
                        if not QuestCheck.Visible or (QuestCheck.Visible and not QuestCheck.Container.QuestTitle.Title.Text:find(_G.Settings.SelectedBoss)) then
                            -- Go to quest giver
                            local Tween = TeleportTo(QuestCFrame.Position)
                            if Tween then Tween.Completed:Wait() end
                            
                            -- Wait for NPCs to load
                            wait(1)
                            
                            -- Fire quest remote
                            FireRemote("StartQuest", QuestName, QuestNumber or 1)
                            wait(0.5)
                        end
                    else
                        -- Just go to boss spawn
                        TeleportTo(QuestCFrame.Position)
                    end
                end
            end)
        end
    end
end)

-- Auto Collect Fruit function
task.spawn(function()
    while wait() do
        if _G.Settings.AutoCollectFruit then
            pcall(function()
                for _, fruit in pairs(workspace:GetChildren()) do
                    if fruit.Name:find("Fruit") and fruit:IsA("Tool") then
                        TeleportTo(fruit.Handle.Position)
                        wait(1)
                        fruit.Handle.CFrame = Player.Character.HumanoidRootPart.CFrame
                    end
                end
            end)
        end
    end
end)

-- Auto Store Fruit function
task.spawn(function()
    while wait(3) do
        if _G.Settings.AutoStoreFruit then
            pcall(function()
                -- Check for fruits in inventory
                for _, tool in pairs(Player.Backpack:GetChildren()) do
                    if tool.Name:find("Fruit") then
                        -- Store fruit
                        FireRemote("StoreFruit", GetFruitName(tool.Name), tool)
                    end
                end
                
                -- Check for fruits equipped
                for _, tool in pairs(Player.Character:GetChildren()) do
                    if tool:IsA("Tool") and tool.Name:find("Fruit") then
                        -- Store fruit
                        FireRemote("StoreFruit", GetFruitName(tool.Name), tool)
                    end
                end
            end)
        end
    end
end)

-- White Screen for performance
task.spawn(function()
    while wait() do
        if _G.Settings.WhiteScreen then
            game:GetService("RunService"):Set3dRenderingEnabled(false)
        else
            game:GetService("RunService"):Set3dRenderingEnabled(true)
        end
    end
end)

-- Hide UI for performance
task.spawn(function()
    while wait() do
        if _G.Settings.HideUI then
            Player.PlayerGui.Main.Enabled = false
        else
            Player.PlayerGui.Main.Enabled = true
        end
    end
end)

-- Build UI with Rayfield
-- Main Tab
local MainTab = Window:CreateTab("Main", 4483345998)

-- Auto Farm Section
local AutoFarmSection = MainTab:CreateSection("Auto Farm")

local AutoFarmToggle = MainTab:CreateToggle({
    Name = "Auto Farm Level",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Value)
        _G.Settings.AutoFarm = Value
    end
})

local AutoQuestToggle = MainTab:CreateToggle({
    Name = "Auto Quest",
    CurrentValue = true,
    Flag = "AutoQuest",
    Callback = function(Value)
        _G.Settings.AutoQuest = Value
    end
})

local FastAttackToggle = MainTab:CreateToggle({
    Name = "Fast Attack",
    CurrentValue = true,
    Flag = "FastAttack",
    Callback = function(Value)
        _G.Settings.FastAttack = Value
    end
})

local KillAuraToggle = MainTab:CreateToggle({
    Name = "Kill Aura",
    CurrentValue = false,
    Flag = "KillAura",
    Callback = function(Value)
        _G.Settings.KillAura = Value
    end
})

-- Weapon Section
MainTab:CreateSection("Weapon Selection")

-- Get player weapons
local Weapons = {}
for _, tool in pairs(Player.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
        table.insert(Weapons, tool.Name)
    end
end

for _, tool in pairs(Player.Character:GetChildren()) do
    if tool:IsA("Tool") then
        table.insert(Weapons, tool.Name)
    end
end

local WeaponDropdown = MainTab:CreateDropdown({
    Name = "Select Weapon",
    Options = Weapons,
    CurrentOption = "",
    Flag = "SelectedWeapon",
    Callback = function(Value)
        _G.Settings.SelectWeapon = Value
    end
})

MainTab:CreateButton({
    Name = "Refresh Weapons",
    Callback = function()
        local NewWeapons = {}
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                table.insert(NewWeapons, tool.Name)
            end
        end
        
        for _, tool in pairs(Player.Character:GetChildren()) do
            if tool:IsA("Tool") then
                table.insert(NewWeapons, tool.Name)
            end
        end
        
        -- Update the dropdown
        WeaponDropdown:Refresh(NewWeapons, true)
    end
})

-- Skills Section
MainTab:CreateSection("Auto Skills")

local SkillZToggle = MainTab:CreateToggle({
    Name = "Auto Skill Z",
    CurrentValue = true,
    Flag = "SkillZ",
    Callback = function(Value)
        _G.Settings.SkillsConfig.Z = Value
    end
})

local SkillXToggle = MainTab:CreateToggle({
    Name = "Auto Skill X",
    CurrentValue = true,
    Flag = "SkillX",
    Callback = function(Value)
        _G.Settings.SkillsConfig.X = Value
    end
})

local SkillCToggle = MainTab:CreateToggle({
    Name = "Auto Skill C",
    CurrentValue = true,
    Flag = "SkillC",
    Callback = function(Value)
        _G.Settings.SkillsConfig.C = Value
    end
})

local SkillVToggle = MainTab:CreateToggle({
    Name = "Auto Skill V",
    CurrentValue = true,
    Flag = "SkillV",
    Callback = function(Value)
        _G.Settings.SkillsConfig.V = Value
    end
})

-- Items Tab
local ItemsTab = Window:CreateTab("Items", 4809772520)

-- Materials Section
ItemsTab:CreateSection("Materials Farming")

-- Initialize materials settings
_G.Settings.Materials = {
    AutoFarmMaterial = false,
    SelectedMaterial = ""
}

-- Materials List
local Materials = {
    "Leather",
    "Scrap Metal",
    "Angel Wings",
    "Fish Tail",
    "Magma Ore",
    "Vampire Fang",
    "Mystic Droplet",
    "Radioactive Material",
    "Demonic Wisp",
    "Gunpowder",
    "Dragon Scale",
    "Conjured Cocoa",
    "Ectoplasm",
    "Dark Fragment",
    "Refined Uranium"
}

local MaterialDropdown = ItemsTab:CreateDropdown({
    Name = "Select Material",
    Options = Materials,
    CurrentOption = "",
    Flag = "SelectedMaterial",
    Callback = function(Value)
        _G.Settings.Materials.SelectedMaterial = Value
    end
})

local AutoFarmMaterialToggle = ItemsTab:CreateToggle({
    Name = "Auto Farm Material",
    CurrentValue = false,
    Flag = "AutoFarmMaterial",
    Callback = function(Value)
        _G.Settings.Materials.AutoFarmMaterial = Value
    end
})

-- Chest Section
ItemsTab:CreateSection("Chest Farming")

-- Initialize chest settings
_G.Settings.Chests = {
    AutoFarmChest = false,
    AutoCollectChests = false
}

local AutoFarmChestToggle = ItemsTab:CreateToggle({
    Name = "Auto Farm Nearby Chests",
    CurrentValue = false,
    Flag = "AutoFarmChest",
    Callback = function(Value)
        _G.Settings.Chests.AutoFarmChest = Value
    end
})

local AutoCollectChestsToggle = ItemsTab:CreateToggle({
    Name = "Auto Collect All Chests",
    CurrentValue = false,
    Flag = "AutoCollectChests",
    Callback = function(Value)
        _G.Settings.Chests.AutoCollectChests = Value
    end
})

-- Auto Farm Items functionality
task.spawn(function()
    while wait(1) do
        if _G.Settings.Materials.AutoFarmMaterial and _G.Settings.Materials.SelectedMaterial ~= "" then
            pcall(function()
                -- Look for material spawns based on selected material
                local materialFound = false
                
                for _, v in pairs(workspace:GetChildren()) do
                    if v.Name:find(_G.Settings.Materials.SelectedMaterial) then
                        materialFound = true
                        -- Teleport to material
                        TeleportTo(v.Position)
                        wait(1) -- Wait to collect
                        break
                    end
                end
                
                if not materialFound then
                    -- Material not found, try to find spawns
                    -- Different locations based on the material
                    if _G.Settings.Materials.SelectedMaterial == "Leather" then
                        TeleportTo(Vector3.new(1000, 40, 1000)) -- Example position
                    elseif _G.Settings.Materials.SelectedMaterial == "Magma Ore" then
                        TeleportTo(Vector3.new(-5500, 40, 8500)) -- Example position
                    end
                    -- Add more material locations as needed
                end
            end)
        end
        
        if _G.Settings.Chests.AutoFarmChest then
            pcall(function()
                -- Look for nearby chests
                for _, v in pairs(workspace:GetChildren()) do
                    if v.Name:find("Chest") and v:IsA("BasePart") then
                        local distance = (Player.Character.HumanoidRootPart.Position - v.Position).Magnitude
                        if distance < 150 then
                            TeleportTo(v.Position)
                            wait(1) -- Wait to collect
                            break
                        end
                    end
                end
            end)
        end
        
        if _G.Settings.Chests.AutoCollectChests then
            pcall(function()
                -- Collect all chests on the map
                for _, v in pairs(workspace:GetChildren()) do
                    if v.Name:find("Chest") and v:IsA("BasePart") then
                        TeleportTo(v.Position)
                        wait(1) -- Wait to collect
                    end
                end
            end)
        end
    end
end)

-- Boss Farm Tab
local BossTab = Window:CreateTab("Boss", 7733911488)

-- Boss Farm Section
BossTab:CreateSection("Boss Farm")

-- Get current sea boss list
local CurrentSeaBosses = {}
if Sea1 then
    CurrentSeaBosses = BossList.Sea1
elseif Sea2 then
    CurrentSeaBosses = BossList.Sea2
elseif Sea3 then
    CurrentSeaBosses = BossList.Sea3
end

local BossDropdown = BossTab:CreateDropdown({
    Name = "Select Boss",
    Options = CurrentSeaBosses,
    CurrentOption = "",
    Flag = "SelectedBoss",
    Callback = function(Value)
        _G.Settings.SelectedBoss = Value
    end
})

local AutoFarmBossToggle = BossTab:CreateToggle({
    Name = "Auto Farm Boss",
    CurrentValue = false,
    Flag = "AutoFarmBoss",
    Callback = function(Value)
        _G.Settings.AutoFarmBoss = Value
    end
})

-- Boss Settings Section
BossTab:CreateSection("Boss Settings")

-- Add more boss options
BossTab:CreateToggle({
    Name = "Auto Retry Boss",
    CurrentValue = false,
    Flag = "AutoRetryBoss",
    Callback = function(Value)
        _G.Settings.AutoRetryBoss = Value
    end
})

BossTab:CreateToggle({
    Name = "Farm All Bosses",
    CurrentValue = false,
    Flag = "FarmAllBosses",
    Callback = function(Value)
        _G.Settings.FarmAllBosses = Value
    end
})

-- ESP Tab
local ESPTab = Window:CreateTab("ESP", 7734053495)

-- ESP Section
ESPTab:CreateSection("ESP Settings")

local PlayerESPToggle = ESPTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(Value)
        _G.Settings.ESP.Players = Value
    end
})

local ChestESPToggle = ESPTab:CreateToggle({
    Name = "Chest ESP",
    CurrentValue = false,
    Flag = "ChestESP",
    Callback = function(Value)
        _G.Settings.ESP.Chests = Value
    end
})

local FruitESPToggle = ESPTab:CreateToggle({
    Name = "Fruit ESP",
    CurrentValue = false,
    Flag = "FruitESP",
    Callback = function(Value)
        _G.Settings.ESP.Fruits = Value
    end
})

local FlowerESPToggle = ESPTab:CreateToggle({
    Name = "Flower ESP",
    CurrentValue = false,
    Flag = "FlowerESP",
    Callback = function(Value)
        _G.Settings.ESP.Flowers = Value
    end
})

-- Fruit Tab
local FruitTab = Window:CreateTab("Fruit", 7733674128)

-- Fruit Collection Section
FruitTab:CreateSection("Fruit Collection")

local AutoCollectFruitToggle = FruitTab:CreateToggle({
    Name = "Auto Collect Fruit",
    CurrentValue = false,
    Flag = "AutoCollectFruit",
    Callback = function(Value)
        _G.Settings.AutoCollectFruit = Value
    end
})

local AutoStoreFruitToggle = FruitTab:CreateToggle({
    Name = "Auto Store Fruit",
    CurrentValue = false,
    Flag = "AutoStoreFruit",
    Callback = function(Value)
        _G.Settings.AutoStoreFruit = Value
    end
})

-- Fruit Shop Section
FruitTab:CreateSection("Fruit Shop")

-- Initialize fruit shop settings
_G.Settings.FruitShop = {
    AutoBuyFruit = false,
    SelectedFruit = ""
}

-- List of fruits to buy
local ShopFruits = {
    "Bomb-Bomb",
    "Spike-Spike",
    "Chop-Chop",
    "Spring-Spring",
    "Kilo-Kilo",
    "Smoke-Smoke",
    "Spin-Spin",
    "Flame-Flame",
    "Bird-Bird: Falcon",
    "Ice-Ice",
    "Sand-Sand",
    "Dark-Dark",
    "Revive-Revive",
    "Diamond-Diamond",
    "Light-Light",
    "Love-Love",
    "Rubber-Rubber",
    "Barrier-Barrier",
    "Magma-Magma",
    "Door-Door",
    "Quake-Quake",
    "Buddha-Buddha",
    "String-String",
    "Phoenix-Phoenix",
    "Rumble-Rumble",
    "Paw-Paw",
    "Gravity-Gravity",
    "Dough-Dough",
    "Shadow-Shadow",
    "Venom-Venom",
    "Control-Control",
    "Soul-Soul",
    "Dragon-Dragon"
}

local FruitShopDropdown = FruitTab:CreateDropdown({
    Name = "Select Fruit to Buy",
    Options = ShopFruits,
    CurrentOption = "",
    Flag = "SelectedShopFruit",
    Callback = function(Value)
        _G.Settings.FruitShop.SelectedFruit = Value
    end
})

local AutoBuyFruitToggle = FruitTab:CreateToggle({
    Name = "Auto Buy Fruit",
    CurrentValue = false,
    Flag = "AutoBuyFruit",
    Callback = function(Value)
        _G.Settings.FruitShop.AutoBuyFruit = Value
    end
})

FruitTab:CreateButton({
    Name = "Buy Selected Fruit",
    Callback = function()
        if _G.Settings.FruitShop.SelectedFruit ~= "" then
            FireRemote("BuyFruitFromDealer", _G.Settings.FruitShop.SelectedFruit)
            Rayfield:Notify({
                Title = "Fruit Purchase",
                Content = "Attempted to buy " .. _G.Settings.FruitShop.SelectedFruit,
                Duration = 3,
                Image = 4483345998
            })
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "Please select a fruit first!",
                Duration = 3,
                Image = 4483345998
            })
        end
    end
})

-- Auto buy fruit functionality
task.spawn(function()
    while wait(5) do
        if _G.Settings.FruitShop.AutoBuyFruit and _G.Settings.FruitShop.SelectedFruit ~= "" then
            pcall(function()
                FireRemote("BuyFruitFromDealer", _G.Settings.FruitShop.SelectedFruit)
            end)
        end
    end
end)

-- Misc Tab
local MiscTab = Window:CreateTab("Misc", 7044233235)

-- Misc Section
MiscTab:CreateSection("Misc Settings")

local NoClipToggle = MiscTab:CreateToggle({
    Name = "No Clip",
    CurrentValue = true,
    Flag = "NoClip",
    Callback = function(Value)
        _G.Settings.NoClip = Value
    end
})

local WhiteScreenToggle = MiscTab:CreateToggle({
    Name = "White Screen (Performance)",
    CurrentValue = false,
    Flag = "WhiteScreen",
    Callback = function(Value)
        _G.Settings.WhiteScreen = Value
    end
})

local HideUIToggle = MiscTab:CreateToggle({
    Name = "Hide UI (Performance)",
    CurrentValue = false,
    Flag = "HideUI",
    Callback = function(Value)
        _G.Settings.HideUI = Value
    end
})

local HideDamageToggle = MiscTab:CreateToggle({
    Name = "Hide Damage (Performance)",
    CurrentValue = true,
    Flag = "HideDamage",
    Callback = function(Value)
        _G.Settings.HideDamage = Value
        
        -- Hide damage numbers
        if _G.Settings.HideDamage then
            pcall(function()
                game:GetService("ReplicatedStorage").Assets.GUI.DamageCounter.Enabled = false
            end)
        else
            pcall(function()
                game:GetService("ReplicatedStorage").Assets.GUI.DamageCounter.Enabled = true
            end)
        end
    end
})

-- Settings Tab
local SettingsTab = Window:CreateTab("Settings", 7734053495)

-- Tween Section
SettingsTab:CreateSection("Tween Settings")

local TweenSpeedSlider = SettingsTab:CreateSlider({
    Name = "Tween Speed",
    Range = {100, 500},
    Increment = 10,
    Suffix = "Speed",
    CurrentValue = 350,
    Flag = "TweenSpeed",
    Callback = function(Value)
        _G.Settings.TweenSpeed = Value
    end
})

local SeaBoatSpeedSlider = SettingsTab:CreateSlider({
    Name = "Sea Boat Speed",
    Range = {100, 500},
    Increment = 10,
    Suffix = "Speed",
    CurrentValue = 350,
    Flag = "SeaBoatSpeed",
    Callback = function(Value)
        _G.Settings.SeaBoatSpeed = Value
    end
})

-- Credits & Info Tab
local CreditsTab = Window:CreateTab("Credits", 9606626859)
CreditsTab:CreateSection("LAJ HUB Credits")

CreditsTab:CreateParagraph({
    Title = "LAJ HUB Blox Fruits",
    Content = "Created by LAJ Development Team\nPremium Version\nOptimized for Blox Fruits"
})

CreditsTab:CreateButton({
    Name = "Copy Discord Invite",
    Callback = function()
        setclipboard("https://discord.gg/lajhub")
        Rayfield:Notify({
            Title = "Discord Invite Copied",
            Content = "Join our Discord server for updates and support!",
            Duration = 3,
            Image = 4483345998
        })
    end
})

-- Display welcome notification
Rayfield:Notify({
    Title = "LAJ HUB Loaded",
    Content = "Welcome to LAJ HUB Blox Fruits script!",
    Duration = 5,
    Image = 4483345998
})
